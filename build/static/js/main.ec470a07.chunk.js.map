{"version":3,"sources":["store/actions/actionTypes.js","utility/utility.js","hoc/Auxiliary.js","store/actions/burgerBuilder.js","store/actions/orders.js","store/actions/auth.js","store/actions/index.js","components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/UI/Spinner/Spinner.js","axios-orders.js","components/UI/Button/Button.js","components/Navigation/SideDrawer/SideDrawer.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/UI/Input/Input.module.css","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","components/Navigation/Toolbar/Toolbar.module.css","components/UI/Spinner/Spinner.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","hoc/withErrorHandler/withErrorHandler.js","components/UI/Input/Input.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","containers/Layout/Layout.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Logo/Logo.module.css","assets/images/burger-logo.png","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","containers/Auth/Auth.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Logo/Logo.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/Navigation/SideDrawer/SideDrawer.js","containers/Layout/Layout.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/Burger/OrderSummary/OrderSummary.js","containers/BurgerBuilder/BurgerBuilder.js","containers/Auth/Auth.js","containers/Auth/Logout/Logout.js","App.js","serviceWorker.js","store/reducers/burgerBuilder.js","store/reducers/orders.js","store/reducers/auth.js","index.js"],"names":["ADD_INGREDIENT","REMOVE_INGREDIENT","SET_INGREDIENTS","FETCH_INGREDIENTS_FAILED","PURCHASE_INIT","PURCHASE_BURGER_START","PURCHASE_BURGER_SUCCESS","PURCHASE_BURGER_FAILED","FETCH_ORDERS_START","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_FAILED","AUTH_START","AUTH_SUCCESS","AUTH_FAILED","AUTH_LOGOUT","SET_AUTH_REDIRECT_PATH","updateObject","oldObject","updatedProperties","checkValidity","value","rules","isValid","required","trim","minlength","length","maxlength","isEmail","test","toLowerCase","aux","props","children","addIngredient","ingredientName","type","actionTypes","removeIngredient","initIngredients","dispatch","axios","get","then","response","ingredients","data","salad","bacon","cheese","meat","catch","error","purchaseInit","purchaseBurger","orderData","token","post","orderId","purchaseBurgerSuccess","name","purchaseBurgerFail","fetchOrders","userId","queryParams","orders","fetchedOrders","key","push","id","fetchOrdersFail","authSuccess","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","setTimeout","auth","email","password","isSignUp","authData","returnSecureToken","url","Date","getTime","expiresIn","setItem","idToken","localId","authFailed","setAuthRedirectPath","path","checkAuthState","getItem","module","exports","spinner","className","classes","Spinner","Bounce1","Bounce2","instance","create","baseURL","button","Button","buttonType","join","onClick","clicked","disabled","backdrop","show","Backdrop","Modal","nextProps","nextState","this","modalClosed","style","transform","opacity","Component","withErrorHandler","WrappedComponent","params","state","errorConfirmedHandler","setState","reqInterceptor","interceptors","request","use","req","resInterceptor","res","message","eject","input","inputElement","inputClasses","InputElement","shouldValidate","touched","invalid","Invalid","elementType","elementConfig","onChange","changed","options","map","option","displayName","Input","Label","label","BurgerIngredient","ingredient","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Bacon","Salad","burger","transformedIngredients","Object","keys","igKey","Array","_","i","reduce","arr","el","concat","Burger","navigationItem","NavigationItem","exact","to","link","activeClassName","active","navigationItems","NavigationItems","isAuth","logo","Logo","src","burgerLogo","alt","drawerToggle","DrawerToggle","openDrawer","toolbar","Toolbar","opened","DesktopOnly","sideDrawer","attachedClasses","SideDrawer","open","Open","Close","closed","Layout","showSideDrawer","sideDrawerOpenedHandler","sideDrawerClosedHandler","isAuthenticated","Content","connect","buildControl","BuildControl","Less","removed","More","added","controls","buildControls","BuildControls","price","toFixed","control","ingredientAdded","ingredientRemoved","OrderButton","purchasable","ordered","orderSummary","ingredientSummary","textTransform","cancelOrder","confirmOrder","BurgerBuilder","purchasing","updatePurchaseState","sum","purchaseHandler","onSetAuthRedirectPath","history","purchaseCancelHandler","purchaseContinueHandler","onInitPurchase","onInitIngredients","disabledInfo","OrderSummary","totalPrice","onIngredientAdded","onIngredientRemoved","textAlign","burgerBuilder","actions","Auth","placeholder","validation","valid","isSignup","inputChangedHandler","event","controlName","updatedControls","target","submitHandler","preventDefault","onAuth","switchAuthModeHandler","prevState","buildingBurger","authRedirectPath","formElementsArray","config","redirect","loading","onSubmit","color","fontWeight","formElement","building","Logout","onLogout","Checkout","React","lazy","Orders","App","onCheckAuthState","routes","component","render","fallback","Boolean","window","location","hostname","match","INGREDIENT_PRICES","bread","initialState","burgerBuilderReducer","action","purchased","ordersReducer","newOrder","authReducer","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ec470a07.chunk.js","sourcesContent":["export const ADD_INGREDIENT = \"ADD_INGREDIENT\";\r\nexport const REMOVE_INGREDIENT = \"REMOVE_INGREDIENT\";\r\nexport const SET_INGREDIENTS = \"SET_INGREDIENTS\";\r\nexport const FETCH_INGREDIENTS_FAILED = \"FETCH_INGREDIENTS_FAILED\";\r\n\r\nexport const PURCHASE_INIT = \"PURCHASE_INIT\";\r\nexport const PURCHASE_BURGER_START = \"PURCHASE_BURGER_START\";\r\nexport const PURCHASE_BURGER_SUCCESS = \"PURCHASE_BURGER_SUCCESS\";\r\nexport const PURCHASE_BURGER_FAILED = \"PURCHASE_BURGER_FAILED\";\r\n\r\nexport const FETCH_ORDERS_START = \"FETCH_ORDERS_START\";\r\nexport const FETCH_ORDERS_SUCCESS = \"FETCH_ORDERS_SUCCESS\";\r\nexport const FETCH_ORDERS_FAILED = \"FETCH_ORDERS_FAILED\";\r\n\r\nexport const AUTH_START = \"AUTH_START\";\r\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\r\nexport const AUTH_FAILED = \"AUTH_FAILED\";\r\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\";\r\n\r\nexport const SET_AUTH_REDIRECT_PATH = \"SET_AUTH_REDIRECT_PATH\";\r\n","export const updateObject = (oldObject, updatedProperties) => {\r\n  return {\r\n    ...oldObject,\r\n    ...updatedProperties,\r\n  };\r\n};\r\n\r\nexport const checkValidity = (value, rules) => {\r\n  let isValid = true;\r\n  if (!rules) {\r\n    return true;\r\n  }\r\n  if (rules.required) {\r\n    isValid = value.trim() !== \"\" && isValid;\r\n  }\r\n  if (rules.minlength) {\r\n    isValid = value.trim().length >= rules.minlength && isValid;\r\n  }\r\n  if (rules.maxlength) {\r\n    isValid = value.trim().length <= rules.maxlength && isValid;\r\n  }\r\n  if (rules.isEmail) {\r\n    const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n    isValid = pattern.test(value.trim().toLowerCase()) && isValid;\r\n  }\r\n\r\n  return isValid;\r\n};\r\n","const aux = (props) => props.children;\r\n\r\nexport default aux;","import * as actionTypes from \"./actionTypes\";\r\nimport axios from \"../../axios-orders\";\r\n\r\nexport const addIngredient = (ingredientName) => {\r\n  return { type: actionTypes.ADD_INGREDIENT, ingredientName };\r\n};\r\n\r\nexport const removeIngredient = (ingredientName) => {\r\n  return { type: actionTypes.REMOVE_INGREDIENT, ingredientName };\r\n};\r\n\r\nexport const setIngredients = (ingredients) => {\r\n  return {\r\n    type: actionTypes.SET_INGREDIENTS,\r\n    ingredients: {\r\n      salad: ingredients.salad,\r\n      bacon: ingredients.bacon,\r\n      cheese: ingredients.cheese,\r\n      meat: ingredients.meat,\r\n    },\r\n  };\r\n};\r\n\r\nexport const fetchIngredientsFailed = () => {\r\n  return {\r\n    type: actionTypes.FETCH_INGREDIENTS_FAILED,\r\n  };\r\n};\r\n\r\nexport const initIngredients = () => {\r\n  return (dispatch) => {\r\n    axios\r\n      .get(\"/ingredients.json\")\r\n      .then((response) => {\r\n        dispatch(setIngredients(response.data));\r\n      })\r\n      .catch((error) => {\r\n        dispatch(fetchIngredientsFailed());\r\n      });\r\n  };\r\n};\r\n","import axios from \"../../axios-orders\";\r\nimport * as actionTypes from \"./actionTypes\";\r\n\r\nexport const purchaseInit = () => {\r\n  return {\r\n    type: actionTypes.PURCHASE_INIT,\r\n  };\r\n};\r\n\r\nexport const purchaseBurgerSuccess = (orderId, orderData) => {\r\n  return {\r\n    type: actionTypes.PURCHASE_BURGER_SUCCESS,\r\n    orderId,\r\n    orderData,\r\n  };\r\n};\r\n\r\nexport const purchaseBurgerFail = (error) => {\r\n  return {\r\n    type: actionTypes.PURCHASE_BURGER_FAILED,\r\n    error,\r\n  };\r\n};\r\n\r\nexport const purchaseBurgerStart = () => {\r\n  return {\r\n    type: actionTypes.PURCHASE_BURGER_START,\r\n  };\r\n};\r\n\r\nexport const purchaseBurger = (orderData, token) => {\r\n  return (dispatch) => {\r\n    dispatch(purchaseBurgerStart());\r\n    axios\r\n      .post(\"/orders.json?auth=\" + token, orderData)\r\n      .then((response) => {\r\n        dispatch(purchaseBurgerSuccess(response.data.name, orderData));\r\n      })\r\n      .catch((error) => {\r\n        dispatch(purchaseBurgerFail(error));\r\n      });\r\n  };\r\n};\r\n\r\nexport const fetchOrdersSuccess = (orders) => {\r\n  return {\r\n    type: actionTypes.FETCH_ORDERS_SUCCESS,\r\n    orders,\r\n  };\r\n};\r\n\r\nexport const fetchOrdersFail = (error) => {\r\n  return {\r\n    type: actionTypes.FETCH_ORDERS_FAILED,\r\n    error,\r\n  };\r\n};\r\n\r\nexport const fetchOrdersStart = () => {\r\n  return {\r\n    type: actionTypes.FETCH_ORDERS_START,\r\n  };\r\n};\r\n\r\nexport const fetchOrders = (token, userId) => {\r\n  return (dispatch) => {\r\n    dispatch(fetchOrdersStart());\r\n    const queryParams = `?auth=${token}&orderBy=\"userId\"&equalTo=\"${userId}\"`;\r\n    axios\r\n      .get(\"/orders.json\" + queryParams)\r\n      .then((response) => {\r\n        const fetchedOrders = [];\r\n        for (const key in response.data) {\r\n          fetchedOrders.push({\r\n            ...response.data[key],\r\n            id: key,\r\n          });\r\n        }\r\n        dispatch(fetchOrdersSuccess(fetchedOrders));\r\n      })\r\n      .catch((error) => {\r\n        dispatch(fetchOrdersFail(error));\r\n      });\r\n  };\r\n};\r\n","import axios from \"axios\";\r\nimport * as actionTypes from \"./actionTypes\";\r\n\r\nexport const authStart = () => {\r\n  return {\r\n    type: actionTypes.AUTH_START,\r\n  };\r\n};\r\n\r\nexport const authSuccess = (token, userId) => {\r\n  return {\r\n    type: actionTypes.AUTH_SUCCESS,\r\n    token,\r\n    userId,\r\n  };\r\n};\r\n\r\nexport const authFailed = (error) => {\r\n  return {\r\n    type: actionTypes.AUTH_FAILED,\r\n    error,\r\n  };\r\n};\r\n\r\nexport const logout = () => {\r\n  localStorage.removeItem(\"token\");\r\n  localStorage.removeItem(\"expirationTime\");\r\n  localStorage.removeItem(\"userId\");\r\n  return {\r\n    type: actionTypes.AUTH_LOGOUT,\r\n  };\r\n};\r\n\r\nexport const checkAuthTimeout = (expirationTime) => {\r\n  return (dispatch) => {\r\n    setTimeout(() => {\r\n      dispatch(logout());\r\n    }, expirationTime * 1000);\r\n  };\r\n};\r\n\r\nexport const auth = (email, password, isSignUp) => {\r\n  return (dispatch) => {\r\n    dispatch(authStart());\r\n    const authData = {\r\n      email,\r\n      password,\r\n      returnSecureToken: true,\r\n    };\r\n    const method = isSignUp ? \"signUp\" : \"signInWithPassword\";\r\n    const url = `https://identitytoolkit.googleapis.com/v1/accounts:${method}?key=AIzaSyAQa9pqwUNSK6--Se__bQkmkpNpOJ0AgYo`;\r\n\r\n    axios\r\n      .post(url, authData)\r\n      .then((response) => {\r\n        const expirationTime = new Date(\r\n          new Date().getTime() + response.data.expiresIn * 1000\r\n        );\r\n        localStorage.setItem(\"token\", response.data.idToken);\r\n        localStorage.setItem(\"userId\", response.data.localId);\r\n        localStorage.setItem(\"expirationTime\", expirationTime);\r\n        dispatch(authSuccess(response.data.idToken, response.data.localId));\r\n        dispatch(checkAuthTimeout(response.data.expiresIn));\r\n      })\r\n      .catch((error) => {\r\n        dispatch(authFailed(error.response.data.error));\r\n      });\r\n  };\r\n};\r\n\r\nexport const setAuthRedirectPath = (path) => {\r\n  return {\r\n    type: actionTypes.SET_AUTH_REDIRECT_PATH,\r\n    path,\r\n  };\r\n};\r\n\r\nexport const checkAuthState = () => {\r\n  return (dispatch) => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!token) {\r\n      dispatch(logout());\r\n    } else {\r\n      const expirationTime = new Date(localStorage.getItem(\"expirationTime\"));\r\n      if (expirationTime < new Date()) {\r\n        dispatch(logout());\r\n      } else {\r\n        const userId = localStorage.getItem(\"userId\");\r\n        dispatch(authSuccess(token, userId));\r\n        dispatch(\r\n          checkAuthTimeout(\r\n            (expirationTime.getTime() - new Date().getTime()) / 1000\r\n          )\r\n        );\r\n      }\r\n    }\r\n  };\r\n};\r\n","export {\r\n  addIngredient,\r\n  removeIngredient,\r\n  initIngredients,\r\n} from \"./burgerBuilder\";\r\n\r\nexport { purchaseBurger, purchaseInit, fetchOrders } from \"./orders\";\r\n\r\nexport { auth, logout, setAuthRedirectPath, checkAuthState } from \"./auth\";\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__T-uau\",\"BreadTop\":\"BurgerIngredient_BreadTop__3368J\",\"Seeds1\":\"BurgerIngredient_Seeds1__CANqu\",\"Seeds2\":\"BurgerIngredient_Seeds2__2yjBu\",\"Meat\":\"BurgerIngredient_Meat__3YtnE\",\"Cheese\":\"BurgerIngredient_Cheese__vioep\",\"Salad\":\"BurgerIngredient_Salad__22AsJ\",\"Bacon\":\"BurgerIngredient_Bacon__18GFJ\"};","import React from 'react';\r\nimport classes from './Spinner.module.css';\r\n\r\n\r\nconst spinner = (props) => (\r\n    <div className={classes.Spinner}>\r\n        <div className={classes.Bounce1}></div>\r\n        <div className={classes.Bounce2}></div>\r\n    </div>\r\n);\r\n\r\nexport default spinner;\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://react-burger-app-c2840.firebaseio.com'\r\n});\r\n\r\nexport default instance;","import React from \"react\";\r\nimport classes from \"./Button.module.css\";\r\nimport propTypes from \"prop-types\";\r\n\r\nconst button = (props) => {\r\n  return (\r\n    <button\r\n      className={[classes.Button, classes[props.buttonType]].join(\" \")}\r\n      onClick={props.clicked}\r\n      disabled={props.disabled}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nbutton.propTypes = {\r\n  buttonType: propTypes.string.isRequired,\r\n  clicked: propTypes.func,\r\n};\r\n\r\nexport default button;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__qpExk\",\"Open\":\"SideDrawer_Open__2sIIs\",\"Close\":\"SideDrawer_Close__6_rsE\",\"Logo\":\"SideDrawer_Logo__NWuzG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__3OqvK\",\"Label\":\"BuildControl_Label__1FuJ7\",\"Less\":\"BuildControl_Less__cuTIi\",\"More\":\"BuildControl_More__2_xEr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__1NOBT\",\"Label\":\"Input_Label__3lY7X\",\"InputElement\":\"Input_InputElement__3TJTi\",\"Invalid\":\"Input_Invalid__3sV66\"};","import React from 'react';\r\nimport classes from './Backdrop.module.css';\r\nimport propTypes from 'prop-types';\r\n\r\nconst backdrop = (props) => (\r\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\r\n);\r\n\r\nbackdrop.propTypes = {\r\n    clicked: propTypes.func\r\n};\r\n\r\nexport default backdrop;\r\n","import React, { Component } from \"react\";\r\nimport classes from \"./Modal.module.css\";\r\nimport Aux from \"../../../hoc/Auxiliary\";\r\nimport Backdrop from \"../Backdrop/Backdrop\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Modal extends Component {\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    return (\r\n      nextProps.show !== this.props.show ||\r\n      nextProps.children !== this.props.children\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Aux>\r\n        <Backdrop show={this.props.show} clicked={this.props.modalClosed} />\r\n        <div\r\n          className={classes.Modal}\r\n          style={{\r\n            transform: this.props.show ? \"translateY(0)\" : \"translateY(-100vh)\",\r\n            opacity: this.props.show ? \"1\" : \"0\",\r\n          }}\r\n        >\r\n          {this.props.children}\r\n        </div>\r\n      </Aux>\r\n    );\r\n  }\r\n}\r\n\r\nModal.propTypes = {\r\n  show: PropTypes.bool,\r\n  modalClosed: PropTypes.func,\r\n};\r\n\r\nexport default Modal;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__16Rfn\",\"Logo\":\"Toolbar_Logo__2Mjfx\",\"DesktopOnly\":\"Toolbar_DesktopOnly__1g67e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Spinner\":\"Spinner_Spinner__1SPed\",\"Bounce1\":\"Spinner_Bounce1__1hdK8\",\"Bounce2\":\"Spinner_Bounce2__2EwqV\",\"sk-bounce\":\"Spinner_sk-bounce__WcxKz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__1rLMg\",\"active\":\"NavigationItem_active__3PPYa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__3oRob\",\"OrderButton\":\"BuildControls_OrderButton__ckJZE\",\"enable\":\"BuildControls_enable__11j_T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__21A4Z\",\"Success\":\"Button_Success__wjelR\",\"Danger\":\"Button_Danger__kPeFj\"};","import React, { Component } from 'react'\r\nimport Aux from '../Auxiliary'\r\nimport Modal from '../../components/UI/Modal/Modal'\r\n\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n    return class extends Component {\r\n        state = {\r\n            error: null\r\n        }\r\n\r\n        constructor(params) {\r\n            super(params);\r\n            this.reqInterceptor = axios.interceptors.request.use(req => {\r\n                this.setState({ error: null });\r\n                return req;\r\n            });\r\n            this.resInterceptor = axios.interceptors.response.use(res => res, error =>  {\r\n                this.setState({ error: error });\r\n            });\r\n        }\r\n        \r\n        errorConfirmedHandler = () => {\r\n            this.setState({ error: null });\r\n        }\r\n        \r\n        render() {\r\n            return (\r\n                <Aux>\r\n                    <Modal show={this.state.error} modalClosed={this.errorConfirmedHandler}>\r\n                        {this.state.error ? this.state.error.message: null}\r\n                    </Modal>\r\n                    <WrappedComponent { ...this.props } />\r\n                </Aux>\r\n            );\r\n        }\r\n\r\n        componentWillUnmount() {\r\n            axios.interceptors.request.eject(this.reqInterceptor);\r\n            axios.interceptors.request.eject(this.resInterceptor);\r\n        }\r\n    };\r\n}\r\n\r\nexport default withErrorHandler;\r\n","import React from \"react\";\r\nimport classes from \"./Input.module.css\";\r\n\r\nconst input = (props) => {\r\n  let inputElement = null;\r\n  const inputClasses = [classes.InputElement];\r\n\r\n  if (props.shouldValidate && props.touched && props.invalid) {\r\n    inputClasses.push(classes.Invalid);\r\n  }\r\n\r\n  switch (props.elementType) {\r\n    case \"input\":\r\n      inputElement = (\r\n        <input\r\n          className={inputClasses.join(\" \")}\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        />\r\n      );\r\n      break;\r\n    case \"textarea\":\r\n      inputElement = (\r\n        <textarea\r\n          className={inputClasses.join(\" \")}\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        />\r\n      );\r\n      break;\r\n    case \"select\":\r\n      inputElement = (\r\n        <select\r\n          className={inputClasses.join(\" \")}\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        >\r\n          {props.elementConfig.options.map((option) => (\r\n            <option key={option.value} value={option.value}>\r\n              {option.displayName}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      );\r\n      break;\r\n    default:\r\n      inputElement = (\r\n        <input\r\n          className={inputClasses.join(\" \")}\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        />\r\n      );\r\n  }\r\n  return (\r\n    <div className={classes.Input}>\r\n      <label className={classes.Label}>{props.label}</label>\r\n      {inputElement}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default input;\r\n","import React, { Component } from 'react';\r\nimport propTypes from 'prop-types';\r\nimport classes from './BurgerIngredient.module.css';\r\n\r\nclass BurgerIngredient extends Component {\r\n\r\n    render() {\r\n        let ingredient = null;\r\n\r\n        switch (this.props.type) {\r\n            case ('bread-bottom'):\r\n                ingredient = <div className={classes.BreadBottom}></div>;\r\n                break;\r\n            case ('bread-top'):\r\n                ingredient = (\r\n                    <div className={classes.BreadTop}>\r\n                        <div className={classes.Seeds1}></div>\r\n                        <div className={classes.Seeds2}></div>\r\n                    </div>\r\n                );\r\n                break;\r\n            case ('meat'):\r\n                ingredient = <div className={classes.Meat}></div>;\r\n                break;\r\n            case ('cheese'):\r\n                ingredient = <div className={classes.Cheese}></div>;\r\n                break;\r\n            case ('bacon'):\r\n                ingredient = <div className={classes.Bacon}></div>;\r\n                break;\r\n            case ('salad'):\r\n                ingredient = <div className={classes.Salad}></div>;\r\n                break;\r\n            default:\r\n                ingredient = null;\r\n        }\r\n        return ingredient;\r\n    }\r\n};\r\n\r\nBurgerIngredient.propTypes = {\r\n    type: propTypes.string.isRequired\r\n};\r\n\r\nexport default BurgerIngredient;","import React from \"react\";\r\nimport classes from \"./Burger.module.css\";\r\nimport BurgerIngredient from \"./BurgerIngredient/BurgerIngredient\";\r\nimport propTypes from \"prop-types\";\r\n\r\nconst burger = (props) => {\r\n  let transformedIngredients = null;\r\n  if (Object.keys(props.ingredients).length === 0) {\r\n    transformedIngredients = <p>Please start adding ingredients!</p>;\r\n  } else {\r\n    transformedIngredients = Object.keys(props.ingredients)\r\n      .map((igKey) => {\r\n        return [...Array(props.ingredients[igKey])].map((_, i) => (\r\n          <BurgerIngredient key={igKey + i} type={igKey} />\r\n        ));\r\n      })\r\n      .reduce((arr, el) => arr.concat(el));\r\n    if (transformedIngredients.length === 0) {\r\n      transformedIngredients = <p>Please start adding ingredients!</p>;\r\n    }\r\n  }\r\n  return (\r\n    <div className={classes.Burger}>\r\n      <BurgerIngredient type=\"bread-top\" />\r\n      {transformedIngredients}\r\n      <BurgerIngredient type=\"bread-bottom\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nburger.propTypes = {\r\n  ingredients: propTypes.object,\r\n};\r\n\r\nexport default burger;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__1HCq9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__okIHN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__35RK_\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__3YIBb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__1b_hz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__1IMm2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__2shiD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__3g3Xs\"};","import React from \"react\";\r\nimport classes from \"./NavigationItem.module.css\";\r\nimport propTypes from \"prop-types\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst navigationItem = (props) => {\r\n  return (\r\n    <li className={classes.NavigationItem}>\r\n      <NavLink\r\n        exact={props.exact}\r\n        to={props.link}\r\n        activeClassName={classes.active}\r\n      >\r\n        {props.children}\r\n      </NavLink>\r\n    </li>\r\n  );\r\n};\r\n\r\nnavigationItem.propTypes = {\r\n  active: propTypes.bool,\r\n};\r\n\r\nexport default navigationItem;\r\n","import React from \"react\";\r\nimport classes from \"./NavigationItems.module.css\";\r\nimport NavigationItem from \"./NavigationItem/NavigationItem\";\r\n\r\nconst navigationItems = (props) => {\r\n  return (\r\n    <ul className={classes.NavigationItems}>\r\n      <NavigationItem link=\"/\" exact>\r\n        Burger Builder\r\n      </NavigationItem>\r\n      {props.isAuth ? (\r\n        <NavigationItem link=\"/orders\">Orders</NavigationItem>\r\n      ) : null}\r\n      {!props.isAuth ? (\r\n        <NavigationItem link=\"/auth\">Authenticate</NavigationItem>\r\n      ) : (\r\n        <NavigationItem link=\"/logout\">Logout</NavigationItem>\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default navigationItems;\r\n","import React from 'react';\r\nimport classes from './Logo.module.css';\r\nimport burgerLogo from '../../assets/images/burger-logo.png';\r\n\r\nconst logo = () => {\r\n    return (\r\n        <div className={classes.Logo}>\r\n            <img src={burgerLogo} alt='Burger'></img>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default logo;\r\n","import React from 'react';\r\nimport classes from './DrawerToggle.module.css';\r\nimport propTypes from 'prop-types';\r\n\r\nconst drawerToggle = (props) => (\r\n    <div className={classes.DrawerToggle} onClick={props.openDrawer}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n);\r\n\r\ndrawerToggle.propTypes = {\r\n    openDrawer: propTypes.func\r\n};\r\n\r\nexport default drawerToggle;\r\n","import React from \"react\";\r\nimport classes from \"./Toolbar.module.css\";\r\nimport NavigationItems from \"../NavigationItems/NavigationItems\";\r\nimport Logo from \"../../Logo/Logo\";\r\nimport MenuIcon from \"../SideDrawer/DrawerToggle/DrawerToggle\";\r\nimport propTypes from \"prop-types\";\r\n\r\nconst toolbar = (props) => {\r\n  return (\r\n    <header className={classes.Toolbar}>\r\n      <MenuIcon openDrawer={props.opened} />\r\n      <div className={classes.Logo}>\r\n        <Logo />\r\n      </div>\r\n      <nav className={classes.DesktopOnly}>\r\n        <NavigationItems isAuth={props.isAuth} />\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\ntoolbar.propTypes = {\r\n  opened: propTypes.func,\r\n};\r\n\r\nexport default toolbar;\r\n","import React from \"react\";\r\nimport NavigationItems from \"../NavigationItems/NavigationItems\";\r\nimport classes from \"./SideDrawer.module.css\";\r\nimport Logo from \"../../Logo/Logo\";\r\nimport Backdrop from \"../../UI/Backdrop/Backdrop\";\r\nimport Aux from \"../../../hoc/Auxiliary\";\r\nimport propTypes from \"prop-types\";\r\n\r\nconst sideDrawer = (props) => {\r\n  let attachedClasses = [\r\n    classes.SideDrawer,\r\n    props.open ? classes.Open : classes.Close,\r\n  ];\r\n\r\n  return (\r\n    <Aux>\r\n      <Backdrop show={props.open} clicked={props.closed} />\r\n      <div className={attachedClasses.join(\" \")} onClick={props.closed}>\r\n        <div className={classes.Logo}>\r\n          <Logo />\r\n        </div>\r\n        <nav>\r\n          <NavigationItems isAuth={props.isAuth} />\r\n        </nav>\r\n      </div>\r\n    </Aux>\r\n  );\r\n};\r\n\r\nsideDrawer.propTypes = {\r\n  open: propTypes.bool,\r\n  closed: propTypes.func,\r\n};\r\n\r\nexport default sideDrawer;\r\n","import React, { Component } from \"react\";\r\nimport Aux from \"../../hoc/Auxiliary\";\r\nimport classes from \"./Layout.module.css\";\r\nimport Toolbar from \"../../components/Navigation/Toolbar/Toolbar\";\r\nimport SideDrawer from \"../../components/Navigation/SideDrawer/SideDrawer\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Layout extends Component {\r\n  state = {\r\n    showSideDrawer: false,\r\n  };\r\n\r\n  sideDrawerOpenedHandler = () => {\r\n    this.setState({\r\n      showSideDrawer: true,\r\n    });\r\n  };\r\n\r\n  sideDrawerClosedHandler = () => {\r\n    this.setState({\r\n      showSideDrawer: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Aux>\r\n        <div>\r\n          <Toolbar\r\n            opened={this.sideDrawerOpenedHandler}\r\n            isAuth={this.props.isAuthenticated}\r\n          />\r\n          <SideDrawer\r\n            open={this.state.showSideDrawer}\r\n            closed={this.sideDrawerClosedHandler}\r\n            isAuth={this.props.isAuthenticated}\r\n          />\r\n        </div>\r\n        <main className={classes.Content}>{this.props.children}</main>\r\n      </Aux>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuthenticated: state.auth.token !== null,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Layout);\r\n","import React from 'react';\r\nimport classes from './BuildControl.module.css';\r\nimport propTypes from 'prop-types';\r\n\r\nconst buildControl = (props) => (\r\n        <div className={classes.BuildControl}>\r\n            <div className={classes.Label}>{props.label}</div>\r\n            <button className={classes.Less} onClick={props.removed} disabled={props.disabled}>-</button>\r\n            <button className={classes.More} onClick={props.added}>+</button>\r\n        </div>\r\n);\r\n\r\nbuildControl.propTypes = {\r\n    label: propTypes.string,\r\n    removed: propTypes.func,\r\n    added: propTypes.func\r\n};\r\n\r\nexport default buildControl;\r\n","import React from \"react\";\r\nimport classes from \"./BuildControls.module.css\";\r\nimport BuildControl from \"./BuildControl/BuildControl\";\r\nimport propTypes from \"prop-types\";\r\n\r\nconst controls = [\r\n  { label: \"Salad\", type: \"salad\" },\r\n  { label: \"Bacon\", type: \"bacon\" },\r\n  { label: \"Cheese\", type: \"cheese\" },\r\n  { label: \"Meat\", type: \"meat\" },\r\n];\r\n\r\nconst buildControls = (props) => (\r\n  <div className={classes.BuildControls}>\r\n    <p>\r\n      Current Price: <strong>₹{props.price.toFixed(2)}</strong>\r\n    </p>\r\n    {controls.map((control) => (\r\n      <BuildControl\r\n        key={control.label}\r\n        label={control.label}\r\n        added={() => props.ingredientAdded(control.type)}\r\n        removed={() => props.ingredientRemoved(control.type)}\r\n        disabled={props.disabled[control.type]}\r\n      />\r\n    ))}\r\n    <button\r\n      className={classes.OrderButton}\r\n      disabled={!props.purchasable}\r\n      onClick={props.ordered}\r\n    >\r\n      {props.isAuth ? \"ORDER NOW\" : \"SIGN UP TO ORDER\"}\r\n    </button>\r\n  </div>\r\n);\r\n\r\nbuildControls.propTypes = {\r\n  price: propTypes.number,\r\n  ingredientAdded: propTypes.func,\r\n  ingredientRemoved: propTypes.func,\r\n  disabled: propTypes.object,\r\n  purchasable: propTypes.bool,\r\n  ordered: propTypes.func,\r\n  isAuth: propTypes.bool,\r\n};\r\n\r\nexport default buildControls;\r\n","import React from 'react';\r\nimport Aux from '../../../hoc/Auxiliary';\r\nimport Button from '../../UI/Button/Button';\r\nimport propTypes from 'prop-types';\r\n\r\nconst orderSummary = (props) => {\r\n\r\n    const ingredientSummary = Object.keys(props.ingredients)\r\n        .map((igKey) => (\r\n            <li key={igKey}>\r\n                <span style={{textTransform: 'capitalize'}}>{igKey}: </span> {props.ingredients[igKey]}\r\n            </li>)\r\n        );\r\n    return (\r\n        <Aux>\r\n            <h3>Your Order</h3>\r\n            <p>A delicious burger with following ingredients:</p>\r\n            <ul>\r\n                { ingredientSummary }\r\n            </ul>\r\n            <p>Price: <strong>₹{props.price.toFixed(2)}</strong></p>\r\n            <p>Add to cart?</p>\r\n            <Button clicked={props.cancelOrder} buttonType='Danger'>CANCEL</Button>\r\n            <Button clicked={props.confirmOrder} buttonType='Success'>ADD</Button>\r\n        </Aux>\r\n    );\r\n}\r\n\r\norderSummary.propTypes = {\r\n    ingredients: propTypes.object,\r\n    price: propTypes.number,\r\n    cancelOrder: propTypes.func,\r\n    confirmOrder: propTypes.func\r\n};\r\n\r\nexport default orderSummary;\r\n","import React, { Component } from \"react\";\r\nimport Aux from \"../../hoc/Auxiliary\";\r\nimport Burger from \"../../components/Burger/Burger\";\r\nimport BuildControls from \"../../components/Burger/BuildControls/BuildControls\";\r\nimport Modal from \"../../components/UI/Modal/Modal\";\r\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\";\r\nimport axios from \"../../axios-orders\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../store/actions/index\";\r\n\r\nclass BurgerBuilder extends Component {\r\n  state = {\r\n    purchasing: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.onInitIngredients();\r\n  }\r\n\r\n  updatePurchaseState = () => {\r\n    const sum = Object.keys(this.props.ingredients)\r\n      .map((igKey) => this.props.ingredients[igKey])\r\n      .reduce((sum, el) => {\r\n        return sum + el;\r\n      }, 0);\r\n    return sum > 0;\r\n  };\r\n\r\n  purchaseHandler = () => {\r\n    if (this.props.isAuth) {\r\n      this.setState({\r\n        purchasing: true,\r\n      });\r\n    } else {\r\n      this.props.onSetAuthRedirectPath(\"/checkout\");\r\n      this.props.history.push(\"/auth\");\r\n    }\r\n  };\r\n\r\n  purchaseCancelHandler = () => {\r\n    this.setState({\r\n      purchasing: false,\r\n    });\r\n  };\r\n\r\n  purchaseContinueHandler = () => {\r\n    this.props.onInitPurchase();\r\n    this.props.history.push(\"/checkout\");\r\n  };\r\n\r\n  render() {\r\n    const disabledInfo = {\r\n      ...this.props.ingredients,\r\n    };\r\n    for (let key in disabledInfo) {\r\n      disabledInfo[key] = disabledInfo[key] <= 0;\r\n    }\r\n\r\n    return (\r\n      <Aux>\r\n        <Modal\r\n          show={this.state.purchasing}\r\n          modalClosed={this.purchaseCancelHandler}\r\n        >\r\n          {!this.props.ingredients ? (\r\n            <Spinner />\r\n          ) : (\r\n            <OrderSummary\r\n              ingredients={this.props.ingredients}\r\n              price={this.props.totalPrice}\r\n              confirmOrder={this.purchaseContinueHandler}\r\n              cancelOrder={this.purchaseCancelHandler}\r\n            />\r\n          )}\r\n        </Modal>\r\n        {this.props.ingredients ? (\r\n          <Aux>\r\n            <Burger ingredients={this.props.ingredients} />\r\n            <BuildControls\r\n              ingredientAdded={this.props.onIngredientAdded}\r\n              ingredientRemoved={this.props.onIngredientRemoved}\r\n              disabled={disabledInfo}\r\n              price={this.props.totalPrice}\r\n              purchasable={this.updatePurchaseState()}\r\n              ordered={this.purchaseHandler}\r\n              isAuth={this.props.isAuth}\r\n            />\r\n          </Aux>\r\n        ) : this.props.error ? (\r\n          <h2 style={{ textAlign: \"center\" }}>\r\n            Ingredients could not be fetched!\r\n          </h2>\r\n        ) : (\r\n          <Spinner />\r\n        )}\r\n      </Aux>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    ingredients: state.burgerBuilder.ingredients,\r\n    totalPrice: state.burgerBuilder.totalPrice,\r\n    error: state.burgerBuilder.error,\r\n    isAuth: state.auth.token !== null,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onIngredientAdded: (ingredientName) =>\r\n      dispatch(actions.addIngredient(ingredientName)),\r\n    onIngredientRemoved: (ingredientName) =>\r\n      dispatch(actions.removeIngredient(ingredientName)),\r\n    onInitIngredients: () => dispatch(actions.initIngredients()),\r\n    onInitPurchase: () => dispatch(actions.purchaseInit()),\r\n    onSetAuthRedirectPath: (path) =>\r\n      dispatch(actions.setAuthRedirectPath(path)),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withErrorHandler(BurgerBuilder, axios));\r\n","import React, { Component } from \"react\";\r\nimport Input from \"../../components/UI/Input/Input\";\r\nimport Button from \"../../components/UI/Button/Button\";\r\nimport classes from \"./Auth.module.css\";\r\nimport * as actions from \"../../store/actions/index\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\nimport { Redirect } from \"react-router\";\r\nimport { updateObject, checkValidity } from \"../../utility/utility\";\r\n\r\nclass Auth extends Component {\r\n  state = {\r\n    controls: {\r\n      email: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"email\",\r\n          placeholder: \"E-mail Address\",\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          isEmail: true,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n      password: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"password\",\r\n          placeholder: \"Password\",\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          minlength: 6,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n    },\r\n    isSignup: true,\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (!this.props.buildingBurger && this.props.authRedirectPath !== \"/\") {\r\n      this.props.onSetAuthRedirectPath(\"/\");\r\n    }\r\n  }\r\n\r\n  inputChangedHandler = (event, controlName) => {\r\n    const updatedControls = updateObject(this.state.controls, {\r\n      [controlName]: updateObject(this.state.controls[controlName], {\r\n        value: event.target.value,\r\n        valid: checkValidity(\r\n          event.target.value,\r\n          this.state.controls[controlName].validation\r\n        ),\r\n        touched: true,\r\n      }),\r\n    });\r\n    this.setState({\r\n      controls: updatedControls,\r\n    });\r\n  };\r\n\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    this.props.onAuth(\r\n      this.state.controls.email.value,\r\n      this.state.controls.password.value,\r\n      this.state.isSignup\r\n    );\r\n  };\r\n\r\n  switchAuthModeHandler = () => {\r\n    this.setState((prevState) => {\r\n      return {\r\n        isSignup: !prevState.isSignup,\r\n      };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const formElementsArray = [];\r\n    for (let key in this.state.controls) {\r\n      formElementsArray.push({\r\n        id: key,\r\n        config: this.state.controls[key],\r\n      });\r\n    }\r\n    let redirect = null;\r\n    if (this.props.isAuth) {\r\n      redirect = <Redirect to={this.props.authRedirectPath} />;\r\n    }\r\n    return (\r\n      <div className={classes.Auth}>\r\n        {redirect}\r\n        {this.props.loading ? (\r\n          <Spinner />\r\n        ) : (\r\n          <form onSubmit={this.submitHandler}>\r\n            {this.props.error ? (\r\n              <p style={{ color: \"red\", fontWeight: \"bold\" }}>\r\n                {this.props.error.message}\r\n              </p>\r\n            ) : null}\r\n            {formElementsArray.map((formElement) => (\r\n              <Input\r\n                key={formElement.id}\r\n                elementType={formElement.config.elementType}\r\n                elementConfig={formElement.config.elementConfig}\r\n                value={formElement.config.value}\r\n                changed={(event) =>\r\n                  this.inputChangedHandler(event, formElement.id)\r\n                }\r\n                shouldValidate={formElement.config.validation ? true : false}\r\n                invalid={!formElement.config.valid}\r\n                touched={formElement.config.touched}\r\n              />\r\n            ))}\r\n            <Button buttonType=\"Success\">\r\n              {this.state.isSignup ? \"SIGN UP\" : \"SIGN IN\"}\r\n            </Button>\r\n          </form>\r\n        )}\r\n        <Button buttonType=\"Danger\" clicked={this.switchAuthModeHandler}>\r\n          Switch to {this.state.isSignup ? \"Sign In\" : \"Sign Up\"}\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loading: state.auth.loading,\r\n    error: state.auth.error,\r\n    isAuth: state.auth.token !== null,\r\n    buildingBurger: state.burgerBuilder.building,\r\n    authRedirectPath: state.auth.authRedirectPath,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onAuth: (email, password, isSignup) =>\r\n      dispatch(actions.auth(email, password, isSignup)),\r\n    onSetAuthRedirectPath: (path) =>\r\n      dispatch(actions.setAuthRedirectPath(path)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../../store/actions/index\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nclass Logout extends Component {\r\n  componentDidMount() {\r\n    this.props.onLogout();\r\n  }\r\n  render() {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onLogout: () => dispatch(actions.logout()),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout);\r\n","import React, { Component, Suspense } from \"react\";\r\nimport Layout from \"./containers/Layout/Layout\";\r\nimport BurgerBuilder from \"./containers/BurgerBuilder/BurgerBuilder\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport Auth from \"./containers/Auth/Auth\";\r\nimport Logout from \"./containers/Auth/Logout/Logout\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"./store/actions/index\";\r\nimport Spinner from \"./components/UI/Spinner/Spinner\";\r\n\r\nconst Checkout = React.lazy(() => import(\"./containers/Checkout/Checkout\"));\r\nconst Orders = React.lazy(() => import(\"./containers/Orders/Orders\"));\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.onCheckAuthState();\r\n  }\r\n  render() {\r\n    let routes = (\r\n      <Switch>\r\n        <Route path=\"/auth\" component={Auth} />\r\n        <Route exact path=\"/\" component={BurgerBuilder} />\r\n        <Redirect to=\"/\" />\r\n      </Switch>\r\n    );\r\n    if (this.props.isAuth) {\r\n      routes = (\r\n        <Switch>\r\n          <Route\r\n            path=\"/checkout\"\r\n            render={(props) => (\r\n              <Suspense fallback={<Spinner />}>\r\n                <Checkout {...props} />\r\n              </Suspense>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/orders\"\r\n            render={(props) => (\r\n              <Suspense fallback={<Spinner />}>\r\n                <Orders {...props} />\r\n              </Suspense>\r\n            )}\r\n          />\r\n          <Route path=\"/auth\" component={Auth} />\r\n          <Route path=\"/logout\" component={Logout} />\r\n          <Route exact path=\"/\" component={BurgerBuilder} />\r\n          <Redirect to=\"/\" />\r\n        </Switch>\r\n      );\r\n    }\r\n    return (\r\n      <div>\r\n        <Layout>{routes}</Layout>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuth: state.auth.token !== null,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onCheckAuthState: () => dispatch(actions.checkAuthState()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\nimport { updateObject } from \"../../utility/utility\";\r\n\r\nconst INGREDIENT_PRICES = {\r\n  salad: 10,\r\n  cheese: 15,\r\n  meat: 40,\r\n  bacon: 20,\r\n  bread: 10,\r\n};\r\n\r\nconst initialState = {\r\n  ingredients: null,\r\n  totalPrice: INGREDIENT_PRICES[\"bread\"],\r\n  error: false,\r\n  building: false,\r\n};\r\n\r\nconst burgerBuilderReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.ADD_INGREDIENT:\r\n      return updateObject(state, {\r\n        ingredients: updateObject(state.ingredients, {\r\n          [action.ingredientName]: state.ingredients[action.ingredientName] + 1,\r\n        }),\r\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\r\n        building: true,\r\n      });\r\n    case actionTypes.REMOVE_INGREDIENT:\r\n      return updateObject(state, {\r\n        ingredients: updateObject(state.ingredients, {\r\n          [action.ingredientName]: state.ingredients[action.ingredientName] - 1,\r\n        }),\r\n        totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName],\r\n        building: true,\r\n      });\r\n    case actionTypes.SET_INGREDIENTS:\r\n      return updateObject(state, {\r\n        ingredients: action.ingredients,\r\n        totalPrice: Object.keys(action.ingredients)\r\n          .map((igKey) => action.ingredients[igKey])\r\n          .reduce((sum, el) => {\r\n            return sum + el;\r\n          }, INGREDIENT_PRICES[\"bread\"]),\r\n        error: false,\r\n        building: false,\r\n      });\r\n    case actionTypes.FETCH_INGREDIENTS_FAILED:\r\n      return updateObject(state, {\r\n        error: true,\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default burgerBuilderReducer;\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\nimport { updateObject } from \"../../utility/utility\";\r\n\r\nconst initialState = {\r\n  orders: [],\r\n  loading: false,\r\n  purchased: false,\r\n};\r\n\r\nconst ordersReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.PURCHASE_INIT:\r\n      return updateObject(state, {\r\n        purchased: false,\r\n      });\r\n    case actionTypes.PURCHASE_BURGER_START:\r\n      return updateObject(state, {\r\n        loading: true,\r\n      });\r\n    case actionTypes.PURCHASE_BURGER_SUCCESS:\r\n      const newOrder = {\r\n        ...action.orderData,\r\n        id: action.orderId,\r\n      };\r\n      return updateObject(state, {\r\n        loading: false,\r\n        purchased: true,\r\n        orders: state.orders.concat(newOrder),\r\n      });\r\n    case actionTypes.PURCHASE_BURGER_FAILED:\r\n      return updateObject(state, {\r\n        loading: false,\r\n      });\r\n    case actionTypes.FETCH_ORDERS_START:\r\n      return updateObject(state, {\r\n        loading: true,\r\n      });\r\n    case actionTypes.FETCH_ORDERS_SUCCESS:\r\n      return updateObject(state, {\r\n        orders: action.orders,\r\n        loading: false,\r\n      });\r\n    case actionTypes.FETCH_ORDERS_FAILED:\r\n      return updateObject(state, {\r\n        loading: false,\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default ordersReducer;\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\nimport { updateObject } from \"../../utility/utility\";\r\n\r\nconst initialState = {\r\n  token: null,\r\n  userId: null,\r\n  error: null,\r\n  loading: false,\r\n  authRedirectPath: \"\",\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.AUTH_START:\r\n      return updateObject(state, {\r\n        error: null,\r\n        loading: true,\r\n      });\r\n    case actionTypes.AUTH_SUCCESS:\r\n      return updateObject(state, {\r\n        token: action.token,\r\n        userId: action.userId,\r\n        error: null,\r\n        loading: false,\r\n      });\r\n    case actionTypes.AUTH_FAILED:\r\n      return updateObject(state, {\r\n        error: action.error,\r\n        loading: false,\r\n      });\r\n    case actionTypes.AUTH_LOGOUT:\r\n      return updateObject(state, {\r\n        token: null,\r\n        userId: null,\r\n      });\r\n    case actionTypes.SET_AUTH_REDIRECT_PATH:\r\n      return updateObject(state, {\r\n        authRedirectPath: action.path,\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { createStore, applyMiddleware, combineReducers } from \"redux\";\r\nimport burgerBuilderReducer from \"./store/reducers/burgerBuilder\";\r\nimport { Provider } from \"react-redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport ordersReducer from \"./store/reducers/orders\";\r\nimport authReducer from \"./store/reducers/auth\";\r\n\r\nconst rootReducer = combineReducers({\r\n  burgerBuilder: burgerBuilderReducer,\r\n  orders: ordersReducer,\r\n  auth: authReducer,\r\n});\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  process.env.NODE_ENV === \"development\"\r\n    ? composeWithDevTools(applyMiddleware(thunk))\r\n    : applyMiddleware(thunk)\r\n);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}