{"version":3,"sources":["components/Order/Order.module.css","components/Order/Order.js","containers/Orders/Orders.js"],"names":["module","exports","order","props","ingredients","ingredient","push","name","amount","ingredientsOutput","map","ig","key","className","classes","Ingredient","Order","price","toFixed","Orders","this","onFetchOrders","token","userId","loading","Spinner","orders","id","Component","connect","state","auth","dispatch","actionCreators","withErrorHandler","axios"],"mappings":"qGACAA,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,WAAa,4B,iHC6B7CC,EA3BD,SAACC,GACb,IAAMC,EAAc,GACpB,IAAK,IAAIC,KAAcF,EAAMC,YAC3BA,EAAYE,KAAK,CACfC,KAAMF,EACNG,OAAQL,EAAMC,YAAYC,KAI9B,IAAMI,EAAoBL,EAAYM,KAAI,SAACC,GACzC,OACE,0BAAMC,IAAKD,EAAGJ,KAAMM,UAAWC,IAAQC,YACpCJ,EAAGJ,KADN,KACcI,EAAGH,OADjB,QAMJ,OACE,yBAAKK,UAAWC,IAAQE,OACtB,2CAAiBP,GACjB,qCACS,0CAAWN,EAAMc,MAAMC,QAAQ,O,wCChBxCC,E,4LAEFC,KAAKjB,MAAMkB,cAAcD,KAAKjB,MAAMmB,MAAOF,KAAKjB,MAAMoB,U,+BAItD,OAAQH,KAAKjB,MAAMqB,QAWjB,kBAACC,EAAA,EAAD,MAVA,6BACGL,KAAKjB,MAAMuB,OAAOhB,KAAI,SAACR,GAAD,OACrB,kBAACc,EAAD,CACEJ,IAAKV,EAAMyB,GACXvB,YAAaF,EAAME,YACnBa,MAAOf,EAAMe,gB,GAZJW,aAsCNC,uBAhBS,SAACC,GACvB,MAAO,CACLJ,OAAQI,EAAMJ,OAAOA,OACrBF,QAASM,EAAMJ,OAAOF,QACtBF,MAAOQ,EAAMC,KAAKT,MAClBC,OAAQO,EAAMC,KAAKR,WAII,SAACS,GAC1B,MAAO,CACLX,cAAe,SAACC,EAAOC,GAAR,OACbS,EAASC,IAA2BX,EAAOC,QAIlCM,CAGbK,YAAiBf,EAAQgB","file":"static/js/4.0cc56bf7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__2ljU0\",\"Ingredient\":\"Order_Ingredient__1boF0\"};","import React from \"react\";\r\nimport classes from \"./Order.module.css\";\r\n\r\nconst order = (props) => {\r\n  const ingredients = [];\r\n  for (let ingredient in props.ingredients) {\r\n    ingredients.push({\r\n      name: ingredient,\r\n      amount: props.ingredients[ingredient],\r\n    });\r\n  }\r\n\r\n  const ingredientsOutput = ingredients.map((ig) => {\r\n    return (\r\n      <span key={ig.name} className={classes.Ingredient}>\r\n        {ig.name} ({ig.amount})\r\n      </span>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className={classes.Order}>\r\n      <p>Ingredients: {ingredientsOutput}</p>\r\n      <p>\r\n        Price: <strong>â‚¹ {props.price.toFixed(2)}</strong>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default order;\r\n","import React, { Component } from \"react\";\r\nimport Order from \"../../components/Order/Order\";\r\nimport axios from \"../../axios-orders\";\r\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actionCreators from \"../../store/actions/index\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\n\r\nclass Orders extends Component {\r\n  componentDidMount() {\r\n    this.props.onFetchOrders(this.props.token, this.props.userId);\r\n  }\r\n\r\n  render() {\r\n    return !this.props.loading ? (\r\n      <div>\r\n        {this.props.orders.map((order) => (\r\n          <Order\r\n            key={order.id}\r\n            ingredients={order.ingredients}\r\n            price={order.price}\r\n          />\r\n        ))}\r\n      </div>\r\n    ) : (\r\n      <Spinner />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    orders: state.orders.orders,\r\n    loading: state.orders.loading,\r\n    token: state.auth.token,\r\n    userId: state.auth.userId,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onFetchOrders: (token, userId) =>\r\n      dispatch(actionCreators.fetchOrders(token, userId)),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withErrorHandler(Orders, axios));\r\n"],"sourceRoot":""}